Add the following code to an activity to use the MediaPlayerService:

    private SeekBar mSeekbarAudio;

    private MediaPlayerService mPlayerService;
    private boolean mBound = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Intent intent = new Intent(this, MediaPlayerService.class);
        bindService(intent, mConnection, Context.BIND_AUTO_CREATE);
    }

    ////After the binding process the MediaPlayerService can be used like a normal class.
    ////It should not be accessed before the onServiceConnected method below was called,
    ////because until the value of mPlayerService will be NULL. Check if mBound is true.

    @Override
    protected void onStart() {
        super.onStart();
    }

    @Override
    protected void onStop() {
        super.onStop();
        if (!isChangingConfigurations() && !mPlayerService.mPlayerAdapter.isPlaying()) {
            mPlayerService.mPlayerAdapter.release();
        }
    }

    private ServiceConnection mConnection = new ServiceConnection() {

        @Override
        public void onServiceConnected(ComponentName name, IBinder service) {
            LocalBinder binder = (LocalBinder) service;
            mPlayerService = binder.getService();
            mBound = true;
            initializeUI();
        }

        @Override
        public void onServiceDisconnected(ComponentName name) {
            mBound = false;
        }
    };


    ////This method finds the UI elements by their respective ID and hands them over to the
    ////MediaPlayerService. The class supports two options: a combined Play/Pause button and
    ////separate buttons. The other call would look like this:
    ////mPlayerService.initializeUI(mPlayButton, mPauseButton, mPrevButton, mNextButton, mSeekbarAudio);

    private void initializeUI() {
        Button mPlayPauseButton = findViewById(R.id.button_playPause);
        Button mPrevButton = findViewById(R.id.button_prev);
        Button mNextButton = findViewById(R.id.button_next);
        mSeekbarAudio = findViewById(R.id.seekbar_audio);

        mPlayerService.initializeUI(mPlayPauseButton, mPrevButton, mNextButton, mSeekbarAudio);
    }